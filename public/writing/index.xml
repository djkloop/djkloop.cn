<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Writing on 😪</title>
    <link>https://djkloop.cn/writing/</link>
    <description>Recent content in Writing on 😪</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Sat, 08 Jun 2019 01:49:03 +0800</lastBuildDate>
    
	<atom:link href="https://djkloop.cn/writing/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>数据结构导论-1</title>
      <link>https://djkloop.cn/writing/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%AF%BC%E8%AE%BA-1/</link>
      <pubDate>Thu, 09 Jan 2020 15:08:31 +0800</pubDate>
      
      <guid>https://djkloop.cn/writing/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%AF%BC%E8%AE%BA-1/</guid>
      <description> 算法基础学习.1
 </description>
    </item>
    
    <item>
      <title>Go语言学习-1</title>
      <link>https://djkloop.cn/writing/%E6%B5%8B%E8%AF%95algolia_index/</link>
      <pubDate>Thu, 19 Sep 2019 16:26:19 +0800</pubDate>
      
      <guid>https://djkloop.cn/writing/%E6%B5%8B%E8%AF%95algolia_index/</guid>
      <description> Go语言学习 var a = 1;  </description>
    </item>
    
    <item>
      <title>测试algolia</title>
      <link>https://djkloop.cn/writing/%E6%B5%8B%E8%AF%95algolia/</link>
      <pubDate>Thu, 19 Sep 2019 16:01:54 +0800</pubDate>
      
      <guid>https://djkloop.cn/writing/%E6%B5%8B%E8%AF%95algolia/</guid>
      <description>hugo-algolia Generate and send indices from Hugo static sites for use with Algolia.
An alternative to the Docsearch plugin, allowing for manual index exports. Supports YAML, JSON, and TOML front matter.
Installation Install hugo-algolia from npm
npm install hugo-algolia  Or
yarn add hugo-algolia  How does it work? hugo-algolia looks into the /content folder of your site by default and places a JSON file with the export into the /public folder, but if you&amp;rsquo;d like to use custom inputs and outputs just pass an -i or -o followed by your path via command line.</description>
    </item>
    
    <item>
      <title>Wr A</title>
      <link>https://djkloop.cn/writing/wr-a/</link>
      <pubDate>Sat, 08 Jun 2019 15:57:28 +0800</pubDate>
      
      <guid>https://djkloop.cn/writing/wr-a/</guid>
      <description>angular cli 内置了 webpack,所以也是可以配置路径别名的. 而且配置的方式几乎是一样的.
 配置路径别名 找到你的项目根目录的 tsconfig.json 文件.
注意: 如果你的配置不生效,需要查看你的baseUrl是否配置正确.
{ &amp;quot;compilerOptions&amp;quot;: { &amp;quot;baseUrl&amp;quot;: &amp;quot;./src/&amp;quot;, &amp;quot;paths&amp;quot;: { &amp;quot;@app/*&amp;quot;: [&amp;quot;app/*&amp;quot;], &amp;quot;@services/*&amp;quot;: [&amp;quot;app/services/*&amp;quot;] } } }  配置之前 import { Api } from &#39;../../../../../services/api.service&#39;; import { xxx } from &#39;../../../../../services/api.xxx&#39;;  测试 if(a === b) { console.log(&#39;yellow&#39;) }  配置之后 import { Api } from &#39;@services/api.service&#39;; import { xxx } from &#39;@services/api.xxx&#39;;  一些开发中的小技巧,希望可以帮到你.</description>
    </item>
    
  </channel>
</rss>